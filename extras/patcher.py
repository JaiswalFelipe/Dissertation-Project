# -*- coding: utf-8 -*-
"""patcher.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11b1thXmGTySR3tcBZMbyElvrJ5EnlmLx
"""

!pip install rasterio
!pip install imagecodecs
!pip install tifffile 
!pip install GDAL


import os 
import rasterio
import numpy as np
import tifffile as tiff
import imageio

from skimage import transform
from skimage import img_as_float
from matplotlib import pyplot as plt
from PIL import Image
from rasterio.plot import show
from osgeo import gdal 



def image_patcher(img_name, input_file, output_folder, division):
  data = gdal.Open(input_file)

  gt = data.GetGeoTransform()
  #print(gt)

  xmin = gt[0]
  ymax = gt[3]
  res = gt[1]

  xlen = res * data.RasterXSize
  ylen = res * data.RasterYSize

  div = division

  xsize = xlen/div
  ysize = ylen/div

  xsteps = [xmin + xsize * i for i in range(div+1)]
  ysteps = [ymax - ysize * i for i in range(div+1)]

  for i in range(div):
    for j in range(div):
      xmin = xsteps[i]
      xmax = xsteps[i+1]
      ymax = ysteps[j]
      ymin = ysteps[j+1]

      #print("xmin: "+str(xmin))
      #print("xmax: "+str(xmax))
      #print("ymin: "+str(ymin))
      #print("ymax: "+str(ymax))
      #print("\n")

      gdal.Warp(output_folder + str(img_name) + "_patch" + str(i) + str(j) + ".tif",
                data, outputBounds = (xmin, ymin, xmax, ymax), dstNodata = -9999)
      
      #if i == 0:

      #  gdal.Translate(output_folder + str(img_name) + "_patch" + str(j) + ".tif",
      #          data, projWin = (xmin,ymax,xmax,ymin))
      #else:
      #  gdal.Translate(output_folder + str(img_name) + "_patch" + str(i) + str(j) + ".tif",
      #          data, projWin = (xmin,ymax,xmax,ymin))
      
    #j = 0


# Test run
img_name = ''
img_dir = ''
output_dir = ''
division = 16

image_patcher(img_name, img_dir, output_dir, division)